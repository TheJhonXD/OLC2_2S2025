Grammar

    0 $accept: program $end

    1 program: lines

    2 lines: ε
    3      | lines line
    4      | lines end

    5 line: expr end
    6     | PRINT '(' expr ')' end

    7 end: '\n'
    8    | ';'

    9 expr: expr '+' expr
   10     | expr '-' expr
   11     | expr '*' expr
   12     | expr '/' expr
   13     | '-' expr
   14     | '(' expr ')'
   15     | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 7
    '(' (40) 6 14
    ')' (41) 6 14
    '*' (42) 11
    '+' (43) 9
    '-' (45) 10 13
    '/' (47) 12
    ';' (59) 8
    error (256)
    NUMBER <num> (258) 15
    PRINT (259) 6
    UMINUS (260)


Nonterminals, with rules where they appear

    $accept (14)
        on left: 0
    program <node> (15)
        on left: 1
        on right: 0
    lines <node> (16)
        on left: 2 3 4
        on right: 1 3 4
    line <node> (17)
        on left: 5 6
        on right: 3
    end (18)
        on left: 7 8
        on right: 4 5 6
    expr <node> (19)
        on left: 9 10 11 12 13 14 15
        on right: 5 6 9 10 11 12 13 14


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (lines)

    program  go to state 1
    lines    go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: lines •
    3 lines: lines • line
    4      | lines • end

    NUMBER  shift, and go to state 4
    PRINT   shift, and go to state 5
    '-'     shift, and go to state 6
    '('     shift, and go to state 7
    '\n'    shift, and go to state 8
    ';'     shift, and go to state 9

    $default  reduce using rule 1 (program)

    line  go to state 10
    end   go to state 11
    expr  go to state 12


State 3

    0 $accept: program $end •

    $default  accept


State 4

   15 expr: NUMBER •

    $default  reduce using rule 15 (expr)


State 5

    6 line: PRINT • '(' expr ')' end

    '('  shift, and go to state 13


State 6

   13 expr: '-' • expr

    NUMBER  shift, and go to state 4
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    expr  go to state 14


State 7

   14 expr: '(' • expr ')'

    NUMBER  shift, and go to state 4
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    expr  go to state 15


State 8

    7 end: '\n' •

    $default  reduce using rule 7 (end)


State 9

    8 end: ';' •

    $default  reduce using rule 8 (end)


State 10

    3 lines: lines line •

    $default  reduce using rule 3 (lines)


State 11

    4 lines: lines end •

    $default  reduce using rule 4 (lines)


State 12

    5 line: expr • end
    9 expr: expr • '+' expr
   10     | expr • '-' expr
   11     | expr • '*' expr
   12     | expr • '/' expr

    '+'   shift, and go to state 16
    '-'   shift, and go to state 17
    '*'   shift, and go to state 18
    '/'   shift, and go to state 19
    '\n'  shift, and go to state 8
    ';'   shift, and go to state 9

    end  go to state 20


State 13

    6 line: PRINT '(' • expr ')' end

    NUMBER  shift, and go to state 4
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    expr  go to state 21


State 14

    9 expr: expr • '+' expr
   10     | expr • '-' expr
   11     | expr • '*' expr
   12     | expr • '/' expr
   13     | '-' expr •

    $default  reduce using rule 13 (expr)


State 15

    9 expr: expr • '+' expr
   10     | expr • '-' expr
   11     | expr • '*' expr
   12     | expr • '/' expr
   14     | '(' expr • ')'

    '+'  shift, and go to state 16
    '-'  shift, and go to state 17
    '*'  shift, and go to state 18
    '/'  shift, and go to state 19
    ')'  shift, and go to state 22


State 16

    9 expr: expr '+' • expr

    NUMBER  shift, and go to state 4
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    expr  go to state 23


State 17

   10 expr: expr '-' • expr

    NUMBER  shift, and go to state 4
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    expr  go to state 24


State 18

   11 expr: expr '*' • expr

    NUMBER  shift, and go to state 4
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    expr  go to state 25


State 19

   12 expr: expr '/' • expr

    NUMBER  shift, and go to state 4
    '-'     shift, and go to state 6
    '('     shift, and go to state 7

    expr  go to state 26


State 20

    5 line: expr end •

    $default  reduce using rule 5 (line)


State 21

    6 line: PRINT '(' expr • ')' end
    9 expr: expr • '+' expr
   10     | expr • '-' expr
   11     | expr • '*' expr
   12     | expr • '/' expr

    '+'  shift, and go to state 16
    '-'  shift, and go to state 17
    '*'  shift, and go to state 18
    '/'  shift, and go to state 19
    ')'  shift, and go to state 27


State 22

   14 expr: '(' expr ')' •

    $default  reduce using rule 14 (expr)


State 23

    9 expr: expr • '+' expr
    9     | expr '+' expr •
   10     | expr • '-' expr
   11     | expr • '*' expr
   12     | expr • '/' expr

    '*'  shift, and go to state 18
    '/'  shift, and go to state 19

    $default  reduce using rule 9 (expr)


State 24

    9 expr: expr • '+' expr
   10     | expr • '-' expr
   10     | expr '-' expr •
   11     | expr • '*' expr
   12     | expr • '/' expr

    '*'  shift, and go to state 18
    '/'  shift, and go to state 19

    $default  reduce using rule 10 (expr)


State 25

    9 expr: expr • '+' expr
   10     | expr • '-' expr
   11     | expr • '*' expr
   11     | expr '*' expr •
   12     | expr • '/' expr

    $default  reduce using rule 11 (expr)


State 26

    9 expr: expr • '+' expr
   10     | expr • '-' expr
   11     | expr • '*' expr
   12     | expr • '/' expr
   12     | expr '/' expr •

    $default  reduce using rule 12 (expr)


State 27

    6 line: PRINT '(' expr ')' • end

    '\n'  shift, and go to state 8
    ';'   shift, and go to state 9

    end  go to state 28


State 28

    6 line: PRINT '(' expr ')' end •

    $default  reduce using rule 6 (line)
