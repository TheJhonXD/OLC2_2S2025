State 0 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: lines

    2 lines: ε
    3      | lines line
    4      | line

    5 line: expr end
    6     | PRINT '(' expr ')' end
    7     | declaration end
    8     | assigment end

    9 end: ';'

   10 declaration: tipo ID '=' expr

   11 assigment: ID '=' expr

   12 tipo: INTEGER
   13     | FLOAT
   14     | TP_STRING
   15     | BOOLEAN
   16     | TP_CHAR

   17 expr: expr '+' expr
   18     | expr '-' expr
   19     | expr '*' expr
   20     | expr '/' expr
   21     | '-' expr
   22     | '(' expr ')'
   23     | NUMBER
   24     | STRING
   25     | CHAR
   26     | ID


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 6 22
    ')' (41) 6 22
    '*' (42) 19
    '+' (43) 17
    '-' (45) 18 21
    '/' (47) 20
    ';' (59) 9
    '=' (61) 10 11
    error (256)
    NUMBER <num> (258) 23
    STRING <str> (259) 24
    ID <str> (260) 10 11 26
    CHAR <ch> (261) 25
    INTEGER (262) 12
    FLOAT (263) 13
    TP_STRING (264) 14
    BOOLEAN (265) 15
    TP_CHAR (266) 16
    PRINT (267) 6
    UMINUS (268)


Nonterminals, with rules where they appear

    $accept (22)
        on left: 0
    program <node> (23)
        on left: 1
        on right: 0
    lines (24)
        on left: 2 3 4
        on right: 1 3
    line <node> (25)
        on left: 5 6 7 8
        on right: 3 4
    end (26)
        on left: 9
        on right: 5 6 7 8
    declaration <node> (27)
        on left: 10
        on right: 7
    assigment <node> (28)
        on left: 11
        on right: 8
    tipo <tipo> (29)
        on left: 12 13 14 15 16
        on right: 10
    expr <node> (30)
        on left: 17 18 19 20 21 22 23 24 25 26
        on right: 5 6 10 11 17 18 19 20 21 22


State 0

    0 $accept: • program $end

    NUMBER     shift, and go to state 1
    STRING     shift, and go to state 2
    ID         shift, and go to state 3
    CHAR       shift, and go to state 4
    INTEGER    shift, and go to state 5
    FLOAT      shift, and go to state 6
    TP_STRING  shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    TP_CHAR    shift, and go to state 9
    PRINT      shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    NUMBER     [reduce using rule 2 (lines)]
    STRING     [reduce using rule 2 (lines)]
    ID         [reduce using rule 2 (lines)]
    CHAR       [reduce using rule 2 (lines)]
    INTEGER    [reduce using rule 2 (lines)]
    FLOAT      [reduce using rule 2 (lines)]
    TP_STRING  [reduce using rule 2 (lines)]
    BOOLEAN    [reduce using rule 2 (lines)]
    TP_CHAR    [reduce using rule 2 (lines)]
    PRINT      [reduce using rule 2 (lines)]
    '-'        [reduce using rule 2 (lines)]
    '('        [reduce using rule 2 (lines)]
    $default   reduce using rule 2 (lines)

    program      go to state 13
    lines        go to state 14
    line         go to state 15
    declaration  go to state 16
    assigment    go to state 17
    tipo         go to state 18
    expr         go to state 19


State 1

   23 expr: NUMBER •

    $default  reduce using rule 23 (expr)


State 2

   24 expr: STRING •

    $default  reduce using rule 24 (expr)


State 3

   11 assigment: ID • '=' expr
   26 expr: ID •

    '='  shift, and go to state 20

    $default  reduce using rule 26 (expr)


State 4

   25 expr: CHAR •

    $default  reduce using rule 25 (expr)


State 5

   12 tipo: INTEGER •

    $default  reduce using rule 12 (tipo)


State 6

   13 tipo: FLOAT •

    $default  reduce using rule 13 (tipo)


State 7

   14 tipo: TP_STRING •

    $default  reduce using rule 14 (tipo)


State 8

   15 tipo: BOOLEAN •

    $default  reduce using rule 15 (tipo)


State 9

   16 tipo: TP_CHAR •

    $default  reduce using rule 16 (tipo)


State 10

    6 line: PRINT • '(' expr ')' end

    '('  shift, and go to state 21


State 11

   21 expr: '-' • expr

    NUMBER  shift, and go to state 1
    STRING  shift, and go to state 2
    ID      shift, and go to state 22
    CHAR    shift, and go to state 4
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 23


State 12

   22 expr: '(' • expr ')'

    NUMBER  shift, and go to state 1
    STRING  shift, and go to state 2
    ID      shift, and go to state 22
    CHAR    shift, and go to state 4
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 24


State 13

    0 $accept: program • $end

    $end  shift, and go to state 25


State 14

    1 program: lines •
    3 lines: lines • line

    NUMBER     shift, and go to state 1
    STRING     shift, and go to state 2
    ID         shift, and go to state 3
    CHAR       shift, and go to state 4
    INTEGER    shift, and go to state 5
    FLOAT      shift, and go to state 6
    TP_STRING  shift, and go to state 7
    BOOLEAN    shift, and go to state 8
    TP_CHAR    shift, and go to state 9
    PRINT      shift, and go to state 10
    '-'        shift, and go to state 11
    '('        shift, and go to state 12

    $default  reduce using rule 1 (program)

    line         go to state 26
    declaration  go to state 16
    assigment    go to state 17
    tipo         go to state 18
    expr         go to state 19


State 15

    4 lines: line •

    $default  reduce using rule 4 (lines)


State 16

    7 line: declaration • end

    ';'  shift, and go to state 27

    end  go to state 28


State 17

    8 line: assigment • end

    ';'  shift, and go to state 27

    end  go to state 29


State 18

   10 declaration: tipo • ID '=' expr

    ID  shift, and go to state 30


State 19

    5 line: expr • end
   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    ';'  shift, and go to state 27

    end  go to state 35


State 20

   11 assigment: ID '=' • expr

    NUMBER  shift, and go to state 1
    STRING  shift, and go to state 2
    ID      shift, and go to state 22
    CHAR    shift, and go to state 4
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 36


State 21

    6 line: PRINT '(' • expr ')' end

    NUMBER  shift, and go to state 1
    STRING  shift, and go to state 2
    ID      shift, and go to state 22
    CHAR    shift, and go to state 4
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 37


State 22

   26 expr: ID •

    $default  reduce using rule 26 (expr)


State 23

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   21     | '-' expr •

    $default  reduce using rule 21 (expr)


State 24

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   22     | '(' expr • ')'

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    ')'  shift, and go to state 38


State 25

    0 $accept: program $end •

    $default  accept


State 26

    3 lines: lines line •

    $default  reduce using rule 3 (lines)


State 27

    9 end: ';' •

    $default  reduce using rule 9 (end)


State 28

    7 line: declaration end •

    $default  reduce using rule 7 (line)


State 29

    8 line: assigment end •

    $default  reduce using rule 8 (line)


State 30

   10 declaration: tipo ID • '=' expr

    '='  shift, and go to state 39


State 31

   17 expr: expr '+' • expr

    NUMBER  shift, and go to state 1
    STRING  shift, and go to state 2
    ID      shift, and go to state 22
    CHAR    shift, and go to state 4
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 40


State 32

   18 expr: expr '-' • expr

    NUMBER  shift, and go to state 1
    STRING  shift, and go to state 2
    ID      shift, and go to state 22
    CHAR    shift, and go to state 4
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 41


State 33

   19 expr: expr '*' • expr

    NUMBER  shift, and go to state 1
    STRING  shift, and go to state 2
    ID      shift, and go to state 22
    CHAR    shift, and go to state 4
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 42


State 34

   20 expr: expr '/' • expr

    NUMBER  shift, and go to state 1
    STRING  shift, and go to state 2
    ID      shift, and go to state 22
    CHAR    shift, and go to state 4
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 43


State 35

    5 line: expr end •

    $default  reduce using rule 5 (line)


State 36

   11 assigment: ID '=' expr •
   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 11 (assigment)


State 37

    6 line: PRINT '(' expr • ')' end
   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34
    ')'  shift, and go to state 44


State 38

   22 expr: '(' expr ')' •

    $default  reduce using rule 22 (expr)


State 39

   10 declaration: tipo ID '=' • expr

    NUMBER  shift, and go to state 1
    STRING  shift, and go to state 2
    ID      shift, and go to state 22
    CHAR    shift, and go to state 4
    '-'     shift, and go to state 11
    '('     shift, and go to state 12

    expr  go to state 45


State 40

   17 expr: expr • '+' expr
   17     | expr '+' expr •
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 17 (expr)


State 41

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   18     | expr '-' expr •
   19     | expr • '*' expr
   20     | expr • '/' expr

    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 18 (expr)


State 42

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   19     | expr '*' expr •
   20     | expr • '/' expr

    $default  reduce using rule 19 (expr)


State 43

   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr
   20     | expr '/' expr •

    $default  reduce using rule 20 (expr)


State 44

    6 line: PRINT '(' expr ')' • end

    ';'  shift, and go to state 27

    end  go to state 46


State 45

   10 declaration: tipo ID '=' expr •
   17 expr: expr • '+' expr
   18     | expr • '-' expr
   19     | expr • '*' expr
   20     | expr • '/' expr

    '+'  shift, and go to state 31
    '-'  shift, and go to state 32
    '*'  shift, and go to state 33
    '/'  shift, and go to state 34

    $default  reduce using rule 10 (declaration)


State 46

    6 line: PRINT '(' expr ')' end •

    $default  reduce using rule 6 (line)
